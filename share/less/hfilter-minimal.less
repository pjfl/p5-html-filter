#colours() {
    button-bg: bisque;
    button-border: gainsboro;
    button-disabled-bg: gainsboro;
    button-hover: limegreen;
    button-text: black;
    checkbox-false-bg: firebrick;
    checkbox-true-bg: seagreen;
    close: firebrick;
    contrast: whitesmoke;
    filter-connector: gray;
    filter-editor-bg: gainsboro;
    filter-resizer-bg: linen;
    filter-rule-editor-bg: ivory;
    filter-rule-status-bg: lightpink;
    line-border: gray;
    link: seagreen;
    message-border: firebrick;
    panel-shadow: gray;
    selected: orange;
    text: black;
    title-bg: linen;
    title-border: orange;
}
#fonts() {
    code: ui-monospace, 'Cascadia Code', Menlo, 'DejaVu Sans Mono', monospace;
    cursive: 'Segoe Print', 'Bradley Hand', Chilanka, casual, cursive;
    data: 'Roboto Slab', 'DejaVu Serif', 'Sitka Small', serif;
    mono: 'Nimbus Mono PS', 'Courier New', monospace;
    system: Roboto, system-ui, sans-serif;
}
#grads() {
    button-bg: linear-gradient(0deg, #colours[button-bg], #colours[contrast]);
    button-disabled-bg: linear-gradient(
        0deg, #colours[button-disabled-bg], #colours[contrast]
    );
    button-border-bg: radial-gradient(
        #colours[button-hover], transparent, transparent
    );
    filter-edge-left: linear-gradient(
        to right, transparent, transparent 50%, #colours[line-border] 50.001%,
        #colours[line-border]
    );
    filter-edge-right: linear-gradient(
        to right, #colours[line-border], #colours[line-border] 50%,
        transparent 50.001%, transparent
    );
    filter-lines: linear-gradient(
        to right, #colours[line-border] 1px, transparent 1px, transparent
    );
}
#sizes() {
    checkbox-height: 1.25rem;
    checkbox-knob-width: 20px;
    checkbox-width: 40px;
    filter-editor-height: 400px;
    filter-editor-width: 850px;
    filter-editor-max-height: 800px;
    filter-input-max-width: 10rem;
    filter-rule-max-width: 20rem;
}
.filter-container {
    align-items: flex-start; display: flex; justify-content: center;
    position: relative;
    h3, table, td, th, tbody, tr {
        border: 0; font-family: inherit; font-size: 100%; font-style: inherit;
        font-weight: inherit; vertical-align: baseline;
    }
    h3, table, {
        margin: 0; padding: 0;
    }
    table {
        border-collapse: separate; border-spacing: 0; width: 100%;
    }
    table, td, th {
        vertical-align: middle;
    }
    td, th {
        font-weight: normal; padding: 4px 10px 4px 5px; text-align: left;
    }
    th {
        font-weight: bold;
    }
    .drag, .drag *, .drag .filter-editor {
        cursor: move; cursor: grabbing;
    }
    .filter-editor {
        -moz-user-select: none;
        background: #colours[filter-editor-bg];
        border: 1px solid #colours[line-border]; border-radius: 5px;
        box-shadow: 3px 3px 3px; color: #colours[panel-shadow];
        height: #sizes[filter-editor-height];
        max-height: #sizes[filter-editor-max-height]; overflow: hidden;
        position: relative; width: #sizes[filter-editor-width];
        .filter-tree {
            background: #grads[filter-lines]; background-position-x: 100%;
            background-repeat: no-repeat; background-size: 50% 100%;
            color: #colours[text]; padding: 400px 70%; position: absolute;
        }
    }
    .node-logic-container-container, .node-logic-and-container,
    .node-logic-or-container {
        background: #colours[filter-editor-bg]; border-radius: 5px;
        margin: 0 2px 0 2px; position: relative;
    }
    .node-logic-and-container, node-logic-or-container {
        background: #colours[filter-editor-bg];
    }
    .node-logic-and, .node-logic-or {
        border-collapse: collapse; margin: 0 auto; width: 100%;
    }
    .node-logic-container-container .node-logic-and-container,
    .node-logic-container-container .node-logic-or-container {
        margin-left: 0; margin-right: 0;
    }
    .node-logic-container-container .node-logic-or .node-logic-or,
    .node-logic-container-container .node-logic-or .node-logic-and,
    .node-logic-container-container .node-logic-and .node-logic-or,
    .node-logic-container-container .node-logic-and .node-logic-and {
        margin-left: auto; margin-right: auto;
    }
    .node-logic-and-cell, .node-logic-or-cell {
        padding: 10px;
    }
    .node-logic-container-container, .node-logic-and, .node-logic-or-cell {
        background: #grads[filter-lines]; background-position-x: 100%;
        background-repeat: no-repeat; background-size: 50% 100%;
    }
    .node-logic-or-row-bottom th, .node-logic-or-row-top th {
        background: #colours[filter-connector]; font-size: 1px; height: 1px;
        padding: 0;
    }
    .node-logic-or-row-bottom th {
        background-position: top center;
    }
    .node-logic-or-row-top th {
        background-position: bottom center;
    }
    th.node-logic-or-edge-left, th.node-logic-or-edge-right {
        background-repeat: repeat-x;
    }
    th.node-logic-or-edge-left {
        background: #grads[filter-edge-left];
    }
    th.node-logic-or-edge-right {
        background: #grads[filter-edge-right];
    }
    th.node-logic-or-edge-single {
        background-image: none;
    }
    .node-logic-container-add-and {
        border-left: 10px solid transparent;
        border-right: 10px solid transparent;
        border-top: 10px solid #colours[line-border];
        bottom: -12px; cursor: pointer; left: 50%; margin-bottom: 3px;
        margin-left: -10px; position: absolute;
    }
    .node-logic-container-add-or {
        border-bottom: 10px solid transparent;
        border-left: 10px solid #colours[line-border];
        border-top: 10px solid transparent;
        cursor: pointer; margin-right: -10px; margin-top: -10px;
        position: absolute; right: 0; top: 50%;
    }
    .node-rule-wrapper {
        background: #colours[filter-rule-editor-bg]; border-radius: 5px;
        box-shadow: 3px 3px 3px; color: #colours[panel-shadow];
        margin: 0 auto; max-width: #sizes[filter-rule-max-width];
        position: static;
        .node-rule-box {
            border: 1px solid #colours[line-border];
            border-radius: 5px; color: #colours[text]; cursor: pointer;
            font-size: 0.8rem;
            position: relative;
            .node-rule-box-inner {
                min-width: 6rem;
                div > div:nth-child(3) {
                    padding-top: 0.25rem;
                }
                div > div:last-child {
                    border-bottom-left-radius: 2px;
                    border-bottom-right-radius: 2px;
                    padding-bottom: 0.25rem;
                }
            }
            .node-rule-add-and {
                border-left: 10px solid transparent;
                border-right: 10px solid transparent;
                border-top: 10px solid #colours[line-border];
                bottom: 0; cursor: pointer; left: 50%;
                margin-bottom: -12px; margin-left: -9px; position: absolute;
            }
            .node-rule-add-or {
                border-bottom: 10px solid transparent;
                border-left: 10px solid #colours[line-border];
                border-top: 10px solid transparent;
                cursor: pointer; margin-right: -12px; margin-top: -10px;
                position: absolute; right: 0; top: 50%;
            }
            .node-rule-title-wrapper {
                align-items: center;
                background: #colours[title-bg];
                border-bottom: 1px solid #colours[title-border];
                border-top-left-radius: 5px; border-top-right-radius: 5px;
                display: flex; justify-content: space-between;
                padding: 0.25rem 0.5rem;
                .node-rule-title {
                    flex-grow: 2; font-family: #fonts[system];
                    font-size: 0.8rem; font-weight: normal; margin: 0;
                    padding-right: 0.25rem; white-space: nowrap;
                }
                .node-rule-remove-button {
                    background: #grads[button-bg]; border-radius: 3px;
                    box-shadow: 2px 2px 2px #colours[panel-shadow];
                    color: #colours[close]; cursor: pointer;
                    font-family: #fonts[system]; font-weight: bold;
                    padding: 0 0.25rem;
                    img {
                        height: 16px; width: 16px; vertical-align: middle;
                    }
                }
                .node-rule-remove-button:hover {
                    box-shadow: inset 0 0 3px #colours[panel-shadow];
                    color: #colours[text];
                }
            }
            .node-rule-status {
                background: #colours[filter-rule-status-bg];
            }
            .node-rule-status, .type-date, .type-event,
            .type-field, .type-list, .type-name, .type-negate, .type-numeric,
            .type-operation, .type-string {
                padding: 0 0.5rem; white-space: nowrap;
            }
            .node-rule-status, .node-rule-title, .type-event, .type-name,
            .type-negate, .type-operation {
                font-family: #fonts[system];
            }
            .type-event, .type-negate {
                display: inline-block;
            }
        }
        .node-rule-box.rule-error {
            border: 1px solid #colours[message-border];
            .node-rule-add-and, .node-rule-add-or {
                display: none;
            }
        }
        #node-selected {
            border: 3px solid #colours[selected];
            .node-rule-add-and {
                margin-bottom: -14px;
            }
            .node-rule-add-or {
                margin-right: -14px;
            }
        }
    }
    .node-rule-wrapper.empty {
        max-width: 8rem;
    }
    .rule-editor {
        background: #colours[filter-rule-editor-bg]; border-radius: 5px;
        box-shadow: 3px 3px 3px; color: #colours[panel-shadow];
        display: inline-block; margin-left: 1rem;
        .node-rule-edit-container {
            color: #colours[text]; min-width: 12rem;
            button {
                background: #grads[button-bg];
                border: 2px outset #colours[button-border];
                border-radius: 50px; color: #colours[link];
                cursor: pointer; display: inline-block;
                line-height: 0.8rem; overflow: hidden;
                padding: 0.25rem 0.75rem; position: relative;
                text-decoration: none;
                transition: border 500ms, color 500ms;
                span {
                    font-family: #fonts[system];
                    font-size: 0.7rem; letter-spacing: 0.1rem;
                    position: relative; text-decoration: none;
                    text-transform: uppercase; z-index: 3;
                }
            }
            button:hover {
                border: 2px inset #colours[button-border];
                color: #colours[button-text];
            }
            button::before {
                background: #grads[button-border-bg]; content: '';
                display: block; height: 3rem; left: var(--x);
                opacity: 0; position: absolute;
                top: var(--y); transform: translate(-50%, -50%);
                transition: opacity 500ms; width: 3rem; z-index: 1;
            }
            button:hover::before {
                opacity: 1;
            }
            button::after {
                background: #grads[button-bg];
                border-radius: 50px; content: '';
                inset: 3px; position: absolute; z-index: 2;
            }
            button[disabled=disabled], button[disabled=disabled]::after {
                background: #grads[button-disabled-bg];
            }
            .node-rule-edit {
                border-collapse: separate; border-spacing: 0 0.5rem;
                border-radius: 5px; padding: 0 1rem;
                .node-rule-edit-title {
                    font-family: #fonts[system]; margin-left: -2px;
                    white-space: nowrap;
                }
                .node-rule-edit-footer {
                    display: flex; margin: 0.5rem 0;
                    justify-content: space-between;
                }
            }
        }
    }
    .type-container {
        align-items: center; border-collapse: collapse; display: flex;
        flex-wrap: wrap; margin: 0.5rem 0; justify-content: flex-start;
        input[type=text] {
            border-radius: 5px; font-family: #fonts[data];
        }
        label {
            font-family: #fonts[system]; font-size: 0.8rem;
            line-height: 1rem; padding-right: 0.5rem;
            white-space: nowrap;
        }
        label.type-negate {
            padding-left: 0.25rem; padding-top: 0.25rem;
        }
        select {
            font-family: #fonts[data];
        }
        select, input {
            max-width: #sizes[filter-input-max-width];
        }
        .type-date-relative input {
            text-align: right; width: 4ch;
        }
        .type-field-date {
            width: 16ch;
        }
        .type-field-date:placeholder-shown {
            font-style: italic;
        }
        .type-list-button {
            margin-right: 0.5rem;
        }
        .type-list-display {
            font-size: 0.8rem;
        }
        .checkbox-wrapper {
            display: inline-block; isolation: isolate; position: relative;
            input[type=checkbox] {
                height: #sizes[checkbox-height]; margin: 0; opacity: 0;
                position: relative; top: 4px; width: #sizes[checkbox-width];
                z-index: 3;
            }
        }
        .checkbox-wrapper::after {
            background: #grads[button-bg];
            border: 2px inset #colours[button-border]; border-radius: 10px;
            content: ''; display: block; position: absolute;
            height: #sizes[checkbox-height]; left: 0; top: 4px;
            width: #sizes[checkbox-knob-width]; z-index: 2;
        }
        .checkbox-wrapper:has(input[type=checkbox]:checked)::after {
            left: #sizes[checkbox-knob-width];
        }
        .checkbox-wrapper::before {
            background: #colours[checkbox-false-bg];
            border: 2px inset #colours[button-border]; border-radius: 10px;
            content: ''; display: block; position: absolute;
            height: #sizes[checkbox-height]; left: 0; top: 4px;
            width: #sizes[checkbox-width]; z-index: 1;
        }
        .checkbox-wrapper:has(input[type=checkbox]:checked)::before {
            background: #colours[checkbox-true-bg];
        }
    }
    .type-container.type-date-absolute-date,
    .type-container.type-date-absolute-time-zone {
        margin-bottom: 0;
    }
    .type-container.type-date-relative-days,
    .type-container.type-date-relative-months,
    .type-container.type-date-relative-years {
        margin-bottom: 0;
        label {
            min-width: 3.5rem;
        }
    }
    .type-container.type-numeric-value input.type-string {
        text-align: right; width: 7rem;
    }
    .type-container.type-field-field, .type-container.type-list-list {
        row-gap: 5px;
    }
}
.filter-label {
    vertical-align: top;
}
.filter-resizer {
    background: #colours[filter-resizer-bg]; bottom: 0; cursor: row-resize;
    font-size: 1px; height: 6px; left: 0.25rem; position: absolute;
    right: 0.25rem;
}
